% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/agent_info.R
\name{set_agent_info}
\alias{set_agent_info}
\title{Set up Finn Agent Run Information}
\usage{
set_agent_info(
  project_info,
  driver_llm,
  input_data,
  forecast_horizon,
  external_regressors = NULL,
  hist_end_date = NULL,
  hist_start_date = NULL,
  back_test_scenarios = NULL,
  back_test_spacing = NULL,
  combo_cleanup_date = NULL,
  allow_hierarchical_forecast = FALSE,
  reason_llm = NULL,
  overwrite = FALSE
)
}
\arguments{
\item{project_info}{A Finn project from \code{set_project_info()}}

\item{driver_llm}{A Chat LLM object}

\item{input_data}{A data frame or tibble containing the input data}

\item{forecast_horizon}{The number of periods to forecast}

\item{external_regressors}{Optional character vector of external regressors}

\item{hist_end_date}{Optional Date object indicating the end of the historical data}

\item{hist_start_date}{Optional Date object indicating the start of the historical data}

\item{back_test_scenarios}{Optional character vector of back test scenarios}

\item{back_test_spacing}{Optional numeric value for back test spacing}

\item{combo_cleanup_date}{Optional Date object for combo cleanup}

\item{allow_hierarchical_forecast}{Logical indicating whether to allow hierarchical forecasting}

\item{reason_llm}{Optional Chat LLM object for reasoning tasks}

\item{overwrite}{Logical indicating whether to overwrite existing agent run info}
}
\value{
A list containing the agent run information
}
\description{
This function sets up the necessary information for a Finn Agent run,
including input data, forecast horizon, and other parameters.
It checks for existing runs and allows for overwriting if specified.
}
\examples{
\dontrun{
# load example data
hist_data <- timetk::m4_monthly \%>\%
  dplyr::filter(date >= "2013-01-01") \%>\%
  dplyr::rename(Date = date) \%>\%
  dplyr::mutate(id = as.character(id))

# set up Finn project
project <- set_project_info(
  project_name = "Demo_Project",
  combo_variables = c("id"),
  target_variable = "value",
  date_type = "month"
  )
  
# set up LLM 
driver_llm <- ellmer::chat_azure_openai(model = "gpt-4o-mini")
  
# set up agent info
agent_info <- set_agent_info(
 project_info = project,
 driver_llm = driver_llm,
 input_data = hist_data,
 forecast_horizon = 6
 )
}
}
